buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.8'
    }
}
plugins {
    id "io.spring.dependency-management" version "1.0.7.RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'com.linecorp.armeria:armeria-bom:0.83.0'
    }
}

protobuf {
    // Configure the protoc executable.
    protoc {
        // Download from the repository.
        artifact = 'com.google.protobuf:protoc:3.6.1'
    }

    // Locate the codegen plugins.
    plugins {
        // Locate a plugin with name 'grpc'.
        grpc {
            // Download from the repository.
            artifact = 'io.grpc:protoc-gen-grpc-java:1.19.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            grpc {}
        }
    }
}

dependencies {
    compile 'com.linecorp.armeria:armeria'
    compile 'com.linecorp.armeria:armeria-grpc'
    compile 'io.projectreactor:reactor-core:3.2.6.RELEASE'
    compileOnly 'jakarta.annotation:jakarta.annotation-api:1.3.4'
    runtime 'org.slf4j:slf4j-simple:1.7.26'

    testCompile 'jakarta.annotation:jakarta.annotation-api:1.3.4'
    testCompile 'junit:junit:4.12'
    testCompile 'net.javacrumbs.json-unit:json-unit-fluent:2.4.0'
    testCompile 'org.assertj:assertj-core:3.12.2'
    testCompile 'org.awaitility:awaitility:3.1.6'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    options.encoding = 'UTF-8'
    options.debug = true
    options.compilerArgs += '-parameters'
}

