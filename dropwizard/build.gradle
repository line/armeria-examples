plugins {
    id 'application'
    id "io.spring.dependency-management" version "1.1.0"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.micrometer:micrometer-bom:1.13.0'
        mavenBom 'io.netty:netty-bom:4.1.110.Final'
        mavenBom 'com.linecorp.armeria:armeria-bom:1.31.0'
        mavenBom 'org.junit:junit-bom:5.10.2'
        mavenBom 'io.github.resilience4j:resilience4j-bom:2.2.0'
    }
}

dependencies {
  implementation 'com.google.code.findbugs:jsr305:3.0.2'
  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.assertj:assertj-core:3.25.3'
  testImplementation 'org.junit.jupiter:junit-jupiter-api'
  testImplementation 'org.junit.jupiter:junit-jupiter-params'
  testRuntimeOnly 'org.junit.platform:junit-platform-commons'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
}

application {
    mainClass.set('example.dropwizard.DropwizardArmeriaApplication')
}

dependencies {
    implementation 'com.linecorp.armeria:armeria-dropwizard2'

    testImplementation 'io.dropwizard:dropwizard-testing:2.1.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
}

task runDropwizardExample(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = application.mainClass.get()
    args = ['server', 'server.yaml']
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '17'
    targetCompatibility = '17'
    options.encoding = 'UTF-8'
    options.debug = true
    options.compilerArgs += '-parameters'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

